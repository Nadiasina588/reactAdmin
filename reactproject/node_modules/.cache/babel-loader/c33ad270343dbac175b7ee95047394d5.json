{"ast":null,"code":"var _jsxFileName = \"/home/nadiasina/T\\xE9l\\xE9chargements/reactproject/src/App.js\";\n\n/* import React from \"react\";\nimport { useLocalStore, useObserver } from \"mobx-react\";\nconst StoreContext = React.createContext();\nconst StoreProvider = ({ children }) => {\n const store = useLocalStore(() => ({\n   bugs: [\"Nadiasina\"],\n   addBug: bug => {\n     store.bugs.push(bug);\n   },\n   get bugsCount() {\n     return store.bugs.length;\n   }\n }));\n return (\n   <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n );\n};\nconst BugsHeader = () => {\n const store = React.useContext(StoreContext);\n return useObserver(() => <h1>{store.bugsCount} Nom!</h1>)\n};\nconst BugsList = () => {\n const store = React.useContext(StoreContext);\n return useObserver(() =>(\n   <ul>\n     {store.bugs.map(bug => (\n       <li key={bug}>{bug}</li>\n     ))}\n   </ul>\n ));\n};\nconst BugsForm = () => {\n const store = React.useContext(StoreContext);\n const [bug, setBug] = React.useState(\"\");\n return (\n   <form \n   onSubmit={e => {\n     store.addBug(bug);\n     setBug(\"\");\n     e.preventDefault();\n   }}\n   >\n     <input type=\"text\"\n     value={bug} \n     onChange={e => {\n       setBug(e.target.value);\n     }} \n     />\n     <button type=\"submit\">Add</button>\n   </form>\n )\n}\nexport default function App() {\n return(\n   <StoreProvider>\n   <main>\n     <BugsHeader />\n    <BugsList />\n    <BugsForm/>\n     </main>\n </StoreProvider>   \n );\n};\n*/\nimport React from \"react\";\nimport { action, makeAutoObservable } from \"mobx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Doubler {\n  constructor(value) {\n    this.value = 0;\n    makeAutoObservable(this);\n  }\n\n  increment() {\n    this.value++;\n    this.value++;\n  }\n\n}\n\nconst ResetButton = ({\n  formState\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: action(e => {\n    formState.resetPendingUploads();\n    formState.resetValues();\n    e.stopPropagation();\n  }),\n  children: \"Reset form\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 82,\n  columnNumber: 3\n}, this);\n\n_c = ResetButton;\nexport default App();\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetButton\");","map":{"version":3,"sources":["/home/nadiasina/Téléchargements/reactproject/src/App.js"],"names":["React","action","makeAutoObservable","Doubler","constructor","value","increment","ResetButton","formState","e","resetPendingUploads","resetValues","stopPropagation","App"],"mappings":";;AACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,MAA3C;;;AACA,MAAMC,OAAN,CAAc;AAEZC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAAA,SADpBA,KACoB,GADZ,CACY;AAClBH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AACDI,EAAAA,SAAS,GAAG;AACV,SAAKD,KAAL;AACA,SAAKA,KAAL;AACD;;AARW;;AAUd,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAElB;AACA,EAAA,OAAO,EAAEP,MAAM,CAACQ,CAAC,IAAI;AACnBD,IAAAA,SAAS,CAACE,mBAAV;AACAF,IAAAA,SAAS,CAACG,WAAV;AACAF,IAAAA,CAAC,CAACG,eAAF;AACD,GAJc,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;;KAAML,W;AAaN,eAAeM,GAAG,EAAlB","sourcesContent":["\n /* import React from \"react\";\nimport { useLocalStore, useObserver } from \"mobx-react\";\n\nconst StoreContext = React.createContext();\nconst StoreProvider = ({ children }) => {\n  const store = useLocalStore(() => ({\n    bugs: [\"Nadiasina\"],\n    addBug: bug => {\n      store.bugs.push(bug);\n    },\n    get bugsCount() {\n      return store.bugs.length;\n    }\n  }));\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\nconst BugsHeader = () => {\n  const store = React.useContext(StoreContext);\n  return useObserver(() => <h1>{store.bugsCount} Nom!</h1>)\n};\nconst BugsList = () => {\n  const store = React.useContext(StoreContext);\n  return useObserver(() =>(\n    <ul>\n      {store.bugs.map(bug => (\n        <li key={bug}>{bug}</li>\n      ))}\n    </ul>\n  ));\n};\nconst BugsForm = () => {\n  const store = React.useContext(StoreContext);\n  const [bug, setBug] = React.useState(\"\");\n  return (\n    <form \n    onSubmit={e => {\n      store.addBug(bug);\n      setBug(\"\");\n      e.preventDefault();\n    }}\n    >\n      <input type=\"text\"\n      value={bug} \n      onChange={e => {\n        setBug(e.target.value);\n      }} \n      />\n      <button type=\"submit\">Add</button>\n    </form>\n  )\n}\n\nexport default function App() {\n  return(\n    <StoreProvider>\n    <main>\n      <BugsHeader />\n     <BugsList />\n     <BugsForm/>\n      </main>\n  </StoreProvider>   \n  );\n};\n*/\nimport React from \"react\"\nimport { action, makeAutoObservable } from \"mobx\"\nclass Doubler {\n  value = 0\n  constructor (value) {\n    makeAutoObservable(this)\n  }\n  increment() {\n    this.value++\n    this.value++\n  }\n}\nconst ResetButton = ({ formState }) => (\n  \n  <button \n  onClick={action(e => {\n    formState.resetPendingUploads()\n    formState.resetValues()\n    e.stopPropagation()\n  })}\n  >\n    Reset form\n\n  </button>\n)\nexport default App();"]},"metadata":{},"sourceType":"module"}
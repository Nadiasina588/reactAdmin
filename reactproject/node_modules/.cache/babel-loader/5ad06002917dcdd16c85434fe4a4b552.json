{"ast":null,"code":"import React from \"react\";\n/*import { useLocalStore, useObserver } from \"mobx-react\";\n\nconst StoreContext = React.createContext();\nconst StoreProvider = ({ children }) => {\n  const store = useLocalStore(() => ({\n    bugs: [\"Nadiasina\"],\n    addBug: bug => {\n      store.bugs.push(bug);\n    },\n    get bugsCount() {\n      return store.bugs.length;\n    }\n  }));\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\nconst BugsHeader = () => {\n  const store = React.useContext(StoreContext);\n  return useObserver(() => <h1>{store.bugsCount} Nom!</h1>)\n};\nconst BugsList = () => {\n  const store = React.useContext(StoreContext);\n  return useObserver(() =>(\n    <ul>\n      {store.bugs.map(bug => (\n        <li key={bug}>{bug}</li>\n      ))}\n    </ul>\n  ));\n};\nconst BugsForm = () => {\n  const store = React.useContext(StoreContext);\n  const [bug, setBug] = React.useState(\"\");\n  return (\n    <form \n    onSubmit={e => {\n      store.addBug(bug);\n      setBug(\"\");\n      e.preventDefault();\n    }}\n    >\n      <input type=\"text\"\n      value={bug} \n      onChange={e => {\n        setBug(e.target.value);\n      }} \n      />\n      <button type=\"submit\">Add</button>\n    </form>\n  )\n}\n\nexport default function App() {\n  return(\n    <StoreProvider>\n    <main>\n      <BugsHeader />\n     <BugsList />\n     <BugsForm/>\n      </main>\n  </StoreProvider>   \n  );\n};\n*/\n\nimport mobx from 'mobx-react';\n\nclass Tchat {\n  constructor() {\n    mobx.extendObservable(this, {\n      messages: []\n    });\n  }\n\n}\n\nlet tchat = new Tchat();\nglobal.tchat = tchat;\ntchat.messages.push('Mon nouveau message');\nexport default App();","map":{"version":3,"sources":["/home/nadiasina/Téléchargements/reactproject/src/App.js"],"names":["React","mobx","Tchat","constructor","extendObservable","messages","tchat","global","push","App"],"mappings":"AACC,OAAOA,KAAP,MAAkB,OAAlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AACA,MAAMC,KAAN,CAAa;AACXC,EAAAA,WAAW,GAAI;AACbF,IAAAA,IAAI,CAACG,gBAAL,CAAsB,IAAtB,EAA4B;AAC1BC,MAAAA,QAAQ,EAAE;AADgB,KAA5B;AAGD;;AALU;;AAOb,IAAIC,KAAK,GAAG,IAAIJ,KAAJ,EAAZ;AACAK,MAAM,CAACD,KAAP,GAAeA,KAAf;AACAA,KAAK,CAACD,QAAN,CAAeG,IAAf,CAAoB,qBAApB;AACA,eAAeC,GAAG,EAAlB","sourcesContent":["\n import React from \"react\";\n/*import { useLocalStore, useObserver } from \"mobx-react\";\n\nconst StoreContext = React.createContext();\nconst StoreProvider = ({ children }) => {\n  const store = useLocalStore(() => ({\n    bugs: [\"Nadiasina\"],\n    addBug: bug => {\n      store.bugs.push(bug);\n    },\n    get bugsCount() {\n      return store.bugs.length;\n    }\n  }));\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\nconst BugsHeader = () => {\n  const store = React.useContext(StoreContext);\n  return useObserver(() => <h1>{store.bugsCount} Nom!</h1>)\n};\nconst BugsList = () => {\n  const store = React.useContext(StoreContext);\n  return useObserver(() =>(\n    <ul>\n      {store.bugs.map(bug => (\n        <li key={bug}>{bug}</li>\n      ))}\n    </ul>\n  ));\n};\nconst BugsForm = () => {\n  const store = React.useContext(StoreContext);\n  const [bug, setBug] = React.useState(\"\");\n  return (\n    <form \n    onSubmit={e => {\n      store.addBug(bug);\n      setBug(\"\");\n      e.preventDefault();\n    }}\n    >\n      <input type=\"text\"\n      value={bug} \n      onChange={e => {\n        setBug(e.target.value);\n      }} \n      />\n      <button type=\"submit\">Add</button>\n    </form>\n  )\n}\n\nexport default function App() {\n  return(\n    <StoreProvider>\n    <main>\n      <BugsHeader />\n     <BugsList />\n     <BugsForm/>\n      </main>\n  </StoreProvider>   \n  );\n};\n*/\nimport mobx from 'mobx-react';\nclass Tchat  {\n  constructor () {\n    mobx.extendObservable(this, {\n      messages: []\n    })\n  }\n}\nlet tchat = new Tchat()\nglobal.tchat = tchat\ntchat.messages.push('Mon nouveau message')\nexport default App();"]},"metadata":{},"sourceType":"module"}